
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////PRODUCT CREATION TABLE///////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////

///////////////////////////////////////PRODUCT CREATION TABLE OVERVIEW//////////////////////////////////////////////
In addition to the Product Creaation Table, here are three other "source tables" in the sip printify manager main window, products, images and templates. While products and images come largely from the users printify shop, templates are a data form that is exclusive to the sip printify manager plugin.  Templates are the backbone of the efficient bulk new product creation process that the plugin enables.

Initially, the product creation table shows only a header, "Product Creation Table" and a block of text that explains:
To Create new products, choose an existing product to use as a base and create a new template from it.  Once you have a template to work with in the Templates table, select it, choose "create new product" from the dropdown menu and click "execute".  The Product Creation Table will populate with the template data and you can begin creating new products by editing the cells below the template data.  When you are finished, click "publish products" to send the new products to printify.

Before interacting with the product creation table, the user will have registered their shop (which also populates the products table and an images table, the 'sources' tables), potentially added new images to the images table.

Templates are created when a product is chosen in the product table, the "create new template" option is selected from the product action pulldown and the execute button is clicked. 

The following data is pulled directly from the selected source products json file and stored as a new template file that becomes available in the template table list.   

title
source product id //need to add this to the create template code
description			
tags				
blueprint id			
print provider id		
variants			
	id
	price
	is_enabled
print areas			
	variant ids		
	placeholders
		position
		images
			id	
			name	
			type
			height
			width
			x
			y
			scale
			angle
options - colors
	id
	title
	colors
options - sizes
	id
	title

The following additional data is appended to the template json as it is edited and used to create new products.

-a record of the variants that the template has been used to create in the form of:
creations [
	title [
		tags []
		description []
		price []
		sizes [] //maybe? only if we're customizing template sizes
		colors [] //maybe? only if we're customizing template colors
		print-area [
			image#: reference to printify image # from image table images
		]
	]
]

-products in production - if a product row is not made into a product, its content is still saved and repopulates the table the next time the template is loaded

work in progress [
	title [
		tags []
		description []
		price []
		sizes [] //maybe? only if we're customizing template sizes
		colors [] //maybe? only if we're customizing template colors
		print-area [
			image#: reference to printify image # from image table images
		]
	]	
]


Certain of these elements are editable product creation table.  Others are not visible to the user except through the template json editor; they are stored exclusively to be used for the api call to printify to create new products. 
title				
description			
tags					
print areas			
		images
options - colors
options - sizes

///////////////////////////////////////////////////TEMPLATE TABLE OPTIONS/////////////////////////////////////////////////////////
create new product - 
	When the user selects a template in the template table and chooses "create new product" from the pulldown, the product creation table appears and is populated with the template data. 

	Once a template has been selected, Create New Products has been executed and the table has opened, it should remain open until closed and persist through browser refreshes and sessions.

	If another template is selected in the template list and the Create New Product action is executed, it should replace the currently open template.  If there are unsaved changes, the user should be prompted to save them before continuing with a pop-up that has a save option that will save the current template and open the new one and a cancel option that will stop opening the new template and return to the current template.

archive template -
	if a template is archived from the template table (add archive template pulldown option), the source json template file is moved to an archive folder in the templates folder in local storage.  if the template being archived is active in the product creation table, the table is closed after checking to see if the user wants to save any changes that may have been made.

delete template -
	delete template option should be safeguarded with alerts.  templates contain irreplaceable plugin data and should not be accidentally deleted.

//////////////////////////////////////////////ANATOMY OF THE PRODUCT CREATION TABLE////////////////////////////////////////
//////////////////////////////////////////////PRODUCT CREATION TABLE HEADER///////////////////////////////////////////////
the create products table occupies a section in the plugins main admin panel under the producct, templates and images source tables. 
The product creation table consists of two main parts, the header and the table itself.  The header area of the product creation table contains a title, a subtitle that shows the name of the currently selected template and controls for building new products. 

	The current slate of Product Creation Table header controls includes:

	import csv - The import csv button brings up a file upload dialog that allows the user to upload a csv file that will populate the table with new products.  The csv file should be structured in the same way as the template json file.

	export csv - The export csv button saves the current table data to a csv file that can be downloaded by the user.

	edit template json - The edit json button brings up the existing template editor overlay.  This already exists.  The code to bring it up is in the templateEditor.js file

	save - The save button saves changes reflected in the table to the template.json.  The table remains open for continued editing.

	close - The close button removes the selected template from the table.  If there are unsaved changes it prompts whether the user would like to save before closing.

	publish products - assembles the selected rows into json files that are submitted to printify through its api
			
	Below the product creation table header section is the creation table itself.

///////////////////////////////////////////////THE PRODUCT CREATION TABLE TABLE///////////////////////////////////////////////////

The product creation table appears below the product creation table header when a template is selected and the "create new product" action is executed.  

The first row of the table consists of table header cells populated dynamically by the keys from the loaded template arrrays.  The text in this row will be bold.  The typical compliment will include the following:
#
title				
description			
tags					
print areas			
		images
options - colors
options - sizes

each table header will have a revert icon that will revert all selected rows under that column that have been edited to the source template data turning the text back to grey.

each table header cell that represents an image in the template has a number of features.  
    *selection toggle that will designate the column as a target for image addition.  
        When a column is selected, the user can then select a number of images in the image table, choose 'add images to new products' from the pulldown, click 'execute' and the images will populate unedited image cells one per row in the selected column.  If there ara no numbered new product rows for the images to populate, they will be automatically created with the other cells filled in with the main template data.  In this way the user can select a large number of products and quickly create indiviudal products from each.

    *a radio button in the shape of a star appears at the left side of each image cell header in the template.  
        This star designates the "main" image.  This is the image that is used as the thumbnail in the design cell.  By default it should be the first image in the front print location.  Each radio button should have a tooltip that says "choose as main image".

More detail about how these are generated from the template follow below.

The second row of the table will populate with the main template values associated with the template keys.  This is editable data that can be saved to the template file. but this row is not selectable for product creation.  Edits to the template will populate any new product rows created thereafter. (existing product rows created from the previous template data will not be updated)

Subsequent rows below the main template data are where new products are made, one product per row. Rows are empty initially, but can be activated in a variety of ways.
////////////NEW PRODUCT ROW ACTIVATION//////////

clicking the add product button next to the row - 
	There is an add product button next to each empty row.  These can be shift clicked.

importing a csv -
	When a csv file is imported, the table is populated with new rows.  The csv file should be structured in the same way as the template json file.

adding images to the product table -
	 each new row will be numbered and populated with the main template data (in grey text) so that new products can be made by switching out the relevant cells with new images or text (turning the text black) as needed.

//////////ACTIVE NEW PRODUCT ROWS//////////
active new product rows: 
	are numbered in the first column on the left side.

	each cell is initially populated with the source template data in 70% grey text.

	each cell will have a revert icon that will revert the cell to the main template data turning the text back to grey.  The revert icon will be a small circular arrow that will appear on the far right side of the cell when the cell is hovered over.

    *each image cell in the table will also have a selection toggle.  
        These can be used to designate multiple cells to send a single image to.  When a user selects cells as targets and uses the 'add image to new products' button, the selected image populates all the selected cells.

/////////////////////////////////////////ON TEMPLATE LOAD /////////////////////////////////////
	*The images table list is updated to show which images the template has used to create new products (background color?) these should be sortable and selectable
	*metadata shows up in a template data window above the product creation table
		-number of product variants made
		-number of colors
		-number of sizes
		-number of variant permutations
		-list of print-areas
		-eventually blueprint info, printer info

    Design			| A product may have multiple print areas each with multiple images arranged together to create the design that is printed there, but should nearly always have at least a Front design.  The front design comes first in our table headers called simply "design" because it is the most visually representative of the product.  The template for how the front design is presented in the table is also used later in the columns for the other print area designs.
				| The front design header should span however many images there are in the area with the front "position". the images should appear in columns under the header from left to right in the order they appear from top to bottom in the source array.  Each cell should contain a small 30x30 image thumbnail derived from the url in the "src" key with the image title centered beneath it. The thumbnail should be clickable and open up a lightbox with the image in it.

	| 						Front Design					|
	| image thumbnail	| image thumbnail	| image thumbnail	| image thumbnail	|	
	| image name		| image name		| image name		| image name		|	

    title				| The title in the table is assembled in part from the template title and in part from the front image name.  The code should look up the front image name in the template, find its string in the title string (or the placeholder "[title]") and replace it with the image name of whatever image is in the front image cell whether thats pulled in from the template or the user enters or drags a new image into the image thumb or front image name cells of the table - the name should then be editable.  There should be a reset icon on the far right side of the name cell that will revert it to the template name with the current front image.

    
    colors				| For all the ids in the colors array create a series of swatches in the "colors" table cell associated with that product.  The swatches are filled with the their associated colors hexadecimal value with rollover text that shows the associated colors title.

    sizes				| For all the ids in the sizes array create a series of strings in the "sizes" table cell associated with that product.  For each size show "title" values separated by commas

    description			| The description should populate from the template description.  The cell should only show the first 20 or 30 characters of the description followed by ellipsis.  There should be a document edit button on the far right side of the cell that brings up a text editor overlay using the same implementation used in the description editor already implemented in the code.  Next to the document edit button should be a reset icon that will revert it to the description in the source template.

    tags				| The tags cell should be populated from the template and the cell should be editable.  There should be a reset button on the far right of the cell that reverts the contents of the cell back to the tags in the source template.

    price			| not quite sure how to implement this yet.  Perhaps to start it could just show the range of lowest to highest price shown in the template.

    print areas			| appear in the template in the context of the design locations	

    position	| the solution for the "front" position has been included above.  Each additional position in the template should be structured in the same way and the associated headers, columns and data should be appended to the table in the order in which they appear in the template

    images		| images data is integrated as described above

/////////////////////////////////////////////////////////EDITING THE TEMPLATE/////////////////////////////////////////////


The user can then move on to edit each cell using tools made available by the plugin including adding images, tags, updating titles and descriptions.

PRODUCT CREATION
when the user has completed the population of a new product row or rows to create new products, the rows can be selected and the publish new product button can be clicked.  This will trigger the assembly of the product rows into json files that will be submitted to printify through its api so printify can create new products from them and deliver them to the users woocommerce store for sale.

Once the user has created new products and saved their template, each time the template is subsequently loaded, there will be new types of rows below the main template data row.  These rows will be color coded as follows:
	-rows containing products that have been published to printify have a light green background (these are no longer editable)
	-rows that contain saved products that have not been published to printify have a light yellow background (these are editable)
	-rows that contain products made in the current session have a white background.
Rows containing already made products can be toggled off so that the user can just review new products



-----------------------------------

FOR LATER DEVELOPMENT: template sync button 
		This should be an advanced control in the settings tab or in the advanced controls tab of the sip printify manager plugin.  it scans the images list for images that have tags that share the source product, then it scans the products list for products that have the same blueprint as the template with images that correspond to the tags in the images list.  It then updates the create product table with the products that have been identified.


--------------------------------