---------------------------------------------------
The story of the create new product table begins with the template table.

In the template table, a template can be selected and the "create_new_products" option selected from the dropdown and executed.
	option value="create_new_products"><?php esc_html_e('Create New Products', 'sip-printify-manager')
	input type="submit" name="execute_creation_action" value="<?php esc_attr_e('Execute', 'sip-printify-manager')

Some listener in ajax.js???  picks up the action

this case from ajax.js is triggered (through the use of "creation-action-form" and "actionType: 'creation_action'"?) and contributes the selected templates names.
            case 'creation-action-form':
                actionType = 'creation_action';
                // Collect selected templates
                var selectedTemplates = [];
                $('input[name="selected_templates[]"]:checked').each(function () {
                    selectedTemplates.push($(this).val());
                });
                formData.delete('selected_templates[]');
                selectedTemplates.forEach(function (templateId) {
                    formData.append('selected_templates[]', templateId);
                });
                break;


Then somehow ??? it is directed to productCreation.js which populates makes sure the selectedTemplates data is correctly formatted as template_name, fills out the rest of the ajax form and submits it

        $('#creation-action-form').on('submit', function(event) {
            const action = $('#creation_action').val();
            if (action === 'create_new_products') {
                event.preventDefault(); // Prevent the form from submitting
                const selectedTemplates = $('input[name="selected_templates[]"]:checked');
                if (selectedTemplates.length === 0) {
                    alert('Please select at least one template.');
                    return;
                }
                // Use the first selected template
                selectedTemplateId = selectedTemplates.first().val();
                // Load the Product Creation Table
                loadProductCreationTable(selectedTemplateId);
            }
        });


	loadProductCreationTable(selectedTemplateId);

the lPCT() function shows the Product Creation Table and then makes an ajax call which refers to the name in selectedTemplateId as "template_name" to get the data to fill the creation table (response.data) and then calls buildCreationTable(response.data).

    function loadProductCreationTable(templateName) {
        // Show the product creation container if it's hidden
        $('#product-creation-container').show();
        // Make an AJAX call to fetch the new product JSON
        $.ajax({
            url: sipAjax.ajax_url,
            method: 'POST',
            data: {
                sip_printify_manager_nonce_field: sipAjax.nonce,
                action: 'sip_handle_ajax_request',
                action_type: 'creation_action',
                creation_action: 'create_new_products',
                template_name: selectedTemplateId,
            },
            success: function(response) {
                if (response.success) {
                    // Build the table with the received data
                    buildCreationTable(response.data);
                } else {
                    alert('Error: ' + response.data);
                }
            }
        });
    }

the ajax call goes through sip_handle_ajax_request() in sip-printify-manager.php which responds to "creation_action" and sends the call to sip_handle_template_action()

sip_handle_template_action() in template-functions.php sees the 'create-new-products' template_action and calls the sip_create_new_product_from_template() function.

sip_create_new_product_from_template() in creation-functions.php checks the sip_printify_manager_nonce and sets the template name from 'template_name' and then calls the sip_get_template_json_from_file() function with that name.

	function sip_create_new_product_from_template() {
    		check_ajax_referer('sip_printify_manager_nonce', 'nonce');

    		$template_name = isset($_POST['template_name']) ? sanitize_text_field($_POST['template_name']) : '';

    		$product_data = sip_get_template_json_from_file($template_name);
    		if (!$product_data) wp_send_json_error('Template not found.');

    		wp_send_json_success($product_data);
	}
	add_action('wp_ajax_sip_create_new_product_from_template', 'sip_create_new_product_from_template');


sip_get_template_json_from_file goes to the template directory and gets template_content

	function sip_get_template_json_from_file($template_name) {
    		$template_dir = sip_get_template_dir();
    		error_log('Template Directory: ' . $template_dir);
    		$file_path = $template_dir . $template_name . '.json';
    		error_log('Template File Path: ' . $file_path);
    		if (!file_exists($file_path)) {
        		error_log('Template file does not exist at: ' . $file_path);
        		return false;
    		}
    		$template_content = file_get_contents($file_path);
    		return json_decode($template_content, true);
	}




---------------------------------------------------
NOTES - This function in new product creation is what needs to be fixed  for the create new product table to fill

sip.productCreation = (function($) {
    // Store the selected template ID
    let selectedTemplateId = null;

    // Define the init function
    function init() {
        // Event listener for the form submission
        $('#template-action-form').on('submit', function(event) {
            const action = $('#template_action').val();

            if (action === 'create_new_products') {
                event.preventDefault(); // Prevent the form from submitting

                const selectedTemplates = $('input[name="selected_templates[]"]:checked');

                if (selectedTemplates.length === 0) {
                    alert('Please select at least one template.');
                    return;
                }

                // Use the first selected template
                selectedTemplateId = selectedTemplates.first().val();

                // Load the Product Creation Table
                loadProductCreationTable(selectedTemplateId);
            }

            // Handle other actions...
        });

-----------------------------------
OTHER CLEANUP

change save template related things to:
create_template
edit_template
save_template_edits

change #product-editor-save to template-editor-save

product-editor-header span to template-editor-header
search for other instances of product-editor